plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'sk.crawler.ibouz.setkaihou'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

compile group: 'com.codeborne', name: 'selenide', version: '5.12.2'
	// gradle test -i -PisProduction=true
	// 本番環境ではlibsディレクトリのjarを読み込む
	// if (project.hasProperty("isProduction")) {
	if (System.properties['env'].equals("IS_PROD")) {
		implementation fileTree(dir: 'libs', include: '*.jar')
	} else {
		implementation project(':sk-crawler-ibouz-library')
	}

}

task zakki() {
	println projectDir
	// println project.hasProperty("isProduction")
	// println "Hello ${System.properties['env']}"
}

test {
	useJUnitPlatform()
	systemProperties(System.getProperties())
	// キャッシュを削除
	delete "${rootDir}/.gradle/buildOutputCleanup/cache.properties"

}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}